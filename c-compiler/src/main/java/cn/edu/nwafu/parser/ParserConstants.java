/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package cn.edu.nwafu.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VOID = 12;
  /** RegularExpression Id. */
  int CHAR = 13;
  /** RegularExpression Id. */
  int SHORT = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int LONG = 16;
  /** RegularExpression Id. */
  int STRUCT = 17;
  /** RegularExpression Id. */
  int UNION = 18;
  /** RegularExpression Id. */
  int ENUM = 19;
  /** RegularExpression Id. */
  int STATIC = 20;
  /** RegularExpression Id. */
  int EXTERN = 21;
  /** RegularExpression Id. */
  int CONST = 22;
  /** RegularExpression Id. */
  int SIGNED = 23;
  /** RegularExpression Id. */
  int UNSIGNED = 24;
  /** RegularExpression Id. */
  int IF = 25;
  /** RegularExpression Id. */
  int ELSE = 26;
  /** RegularExpression Id. */
  int SWITCH = 27;
  /** RegularExpression Id. */
  int CASE = 28;
  /** RegularExpression Id. */
  int DEFAULT_ = 29;
  /** RegularExpression Id. */
  int WHILE = 30;
  /** RegularExpression Id. */
  int DO = 31;
  /** RegularExpression Id. */
  int FOR = 32;
  /** RegularExpression Id. */
  int RETURN = 33;
  /** RegularExpression Id. */
  int BREAK = 34;
  /** RegularExpression Id. */
  int CONTINUE = 35;
  /** RegularExpression Id. */
  int GOTO = 36;
  /** RegularExpression Id. */
  int TYPEDEF = 37;
  /** RegularExpression Id. */
  int IMPORT = 38;
  /** RegularExpression Id. */
  int SIZEOF = 39;
  /** RegularExpression Id. */
  int IDENTIFIER = 40;
  /** RegularExpression Id. */
  int INTEGER = 41;
  /** RegularExpression Id. */
  int CHARACTER = 42;
  /** RegularExpression Id. */
  int STRING = 43;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int PREPROCESSOR_OUTPUT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"#\"",
    "\"\\n\"",
    "\"\\\\\\n\"",
    "\"\\\\\\r\\n\"",
    "<token of kind 11>",
    "\"void\"",
    "\"char\"",
    "\"short\"",
    "\"int\"",
    "\"long\"",
    "\"struct\"",
    "\"union\"",
    "\"enum\"",
    "\"static\"",
    "\"extern\"",
    "\"const\"",
    "\"signed\"",
    "\"unsigned\"",
    "\"if\"",
    "\"else\"",
    "\"switch\"",
    "\"case\"",
    "\"default\"",
    "\"while\"",
    "\"do\"",
    "\"for\"",
    "\"return\"",
    "\"break\"",
    "\"continue\"",
    "\"goto\"",
    "\"typedef\"",
    "\"import\"",
    "\"sizeof\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<CHARACTER>",
    "<STRING>",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"<<=\"",
    "\">>=\"",
    "\"?\"",
    "\":\"",
    "\"||\"",
    "\"&&\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"==\"",
    "\"!=\"",
    "\"|\"",
    "\"^\"",
    "\"&\"",
    "\">>\"",
    "\"<<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"...\"",
    "\"++\"",
    "\"--\"",
    "\"!\"",
    "\"~\"",
    "\".\"",
    "\"->\"",
  };

}
